{"version":3,"sources":["routes/SubRoute.tsx","utils/httpRickAndMorty.util.ts","http/RickAndMorty.http.ts","components/CharacterItem.tsx","Pages/HomePage.tsx","components/LocationDetails.tsx","Pages/LocationPage.tsx","Pages/EpisodesPage.tsx","components/CharacterDetails.tsx","Pages/CharacterPage.tsx","routes/routes.ts","App.tsx","reportWebVitals.ts","components/Theme.tsx","index.tsx"],"names":["SubRoute","route","path","render","props","component","routes","HttpRickAdnMorty","axios","create","baseURL","interceptors","request","use","response","data","error","Promise","reject","EnumRequestType","getType","type","RickAndMortyHttp","name","a","get","characters","id","character","location","episode","instance","useStyles","makeStyles","theme","root","display","details","flexDirection","width","content","flex","backgroundColor","cover","height","itemLink","textDecoration","active","color","cursor","palette","secondary","contrastText","colorG","colorW","CharacterItem","classes","history","useHistory","url","slice","Box","p","mt","Card","className","CardMedia","image","title","CardContent","Typography","onClick","push","variant","status","species","created","textInput","primary","main","HomePage","useState","setCharacters","search","setSearch","rickAndMortyHttp","getInstance","handleCharacteres","getCharacteresBySearch","results","useEffect","Grid","container","item","xs","TextField","fullWidth","value","onChange","e","target","label","map","i","sm","md","lg","xl","subContainerInfo","imgPoster","minHeight","objectFit","containerImg","justifyContent","alignItems","alignContent","containerInfo","padding","spacing","LocationDetails","dimension","LocationPage","params","useParams","rickandMortyHttp","setLocation","handleLocation","getLocationById","locationWanted","Paper","EpisodesPage","CharacterDetails","src","alt","gender","exact","setCharacter","handleCharacter","getCharacterById","characterWanted","margin","navbar","App","Container","NavLink","activeClassName","to","noWrap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Theme","children","createMuiTheme","ThemeProvider","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c784b08.chunk.js","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport {IRoute} from \"../models/IRoute\";\nimport {Route} from 'react-router-dom';\n\ninterface OwnProps extends IRoute {\n}\n\ntype Props = OwnProps;\n\nconst SubRoute: FunctionComponent<Props> = (route) => {\n\n    return (\n        <Route path={route.path} render={(props => (<route.component {...props} routes={route.routes}/>))}/>\n    );\n};\n\nexport default SubRoute;\n","import axios, {AxiosError, AxiosRequestConfig, AxiosResponse} from \"axios\";\n\nconst HttpRickAdnMorty = axios.create(\n    {\n        baseURL: 'https://rickandmortyapi.com/api/'\n    }\n)\n\nconst requestInterceptor = (request: AxiosRequestConfig): AxiosRequestConfig => {\n    return request;\n}\n\nconst responseInterceptor = (response: AxiosResponse): AxiosResponse => {\n    let responseProcessed = response.data.data ?? response.data ?? response;\n    return responseProcessed;\n}\n\nconst errorInterceptor = (error: AxiosError): Promise<AxiosError> => {\n    return Promise.reject(error);\n}\n\nHttpRickAdnMorty.interceptors.request.use(requestInterceptor);\nHttpRickAdnMorty.interceptors.response.use(responseInterceptor, errorInterceptor);\n\nexport default HttpRickAdnMorty;","import {CharacterSearched} from \"../models/CharacterSearched\";\nimport HttpRickAdnMorty from \"../utils/httpRickAndMorty.util\";\nimport {Character} from \"../models/Character\";\n\nexport enum EnumRequestType {\n    character = 'character',\n    location = 'location',\n    episode = 'episode'\n}\n\nexport type TypesRequestType = 'character' | 'location' | 'episode';\n\nconst getType = (type?: TypesRequestType): string => {\n    return type ? `${type}/` : '';\n}\n\nexport default class RickAndMortyHttp {\n    public static instance: RickAndMortyHttp;\n\n    private constructor() {\n    }\n\n    public static getInstance(): RickAndMortyHttp {\n        if (!RickAndMortyHttp.instance) {\n            RickAndMortyHttp.instance = new RickAndMortyHttp();\n        }\n        return RickAndMortyHttp.instance;\n    }\n\n    async getCharacteresBySearch(type?: TypesRequestType, name?: string,): Promise<CharacterSearched> {\n        const characters: CharacterSearched = await HttpRickAdnMorty.get(`${getType(type)}?name=${name}`);\n        return characters;\n    }\n\n    async getCharacterById(type?: TypesRequestType, id?: number): Promise<Character> {\n        const character: Character = await HttpRickAdnMorty.get(`${getType(type)}${id}`);\n        return character;\n    }\n\n    async getLocationById(type?: TypesRequestType, id?: number): Promise<Character> {\n        const location: Character = await HttpRickAdnMorty.get(`${getType(type)}${id}`);\n        return location;\n    }\n\n    async getEpisodeById(type?: TypesRequestType, id?: number): Promise<Character> {\n        const episode: Character = await HttpRickAdnMorty.get(`${getType(type)}${id}`);\n        return episode;\n    }\n\n}","import React, {FunctionComponent} from 'react';\nimport {Result} from \"../models/CharacterSearched\";\nimport {Box, Card, CardContent, CardMedia, makeStyles, Typography} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\n\ninterface OwnProps {\n    character: Result\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        //minHeight: theme.spacing(0),\n        //cursor: 'pointer',\n    },\n    details: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%'\n\n    },\n    content: {\n        flex: '1 0 auto',\n        backgroundColor: '#3c3c44'\n    },\n    cover: {\n        width: 250,\n        height: 250,\n    },\n    itemLink: {\n        textDecoration: 'none'\n    },\n    active: {\n        color: '#fff',\n        cursor: 'pointer',\n        textDecoration: 'none',\n        '&:hover': {\n            color: theme.palette.secondary.contrastText,\n        }\n    },\n    colorG: {\n        color: '#CDCDCD'\n    },\n    colorW: {\n        color: '#fff'\n    }\n}))\n\nconst CharacterItem: FunctionComponent<Props> = ({character}) => {\n    const classes = useStyles();\n    //const theme = useTheme();\n    //const isLg = useMediaQuery(theme.breakpoints.up('lg'));\n    const history = useHistory();\n    const handleClick = () => {\n        history.push(`/character/${character.id}`);\n    }\n    const handleClickLocation = () => {\n        history.push(`/location/${id}`);\n    }\n\n    const location = character.location.url;\n    const id = location?.slice(41, 43);\n\n\n    return (\n        <Box p={1} mt={3}>\n            <Card className={classes.root}> {/*onClick={handleClick}*/}\n                <CardMedia\n                    className={classes.cover}\n                    image={character.image}\n                    title={character.name}/>\n\n                {\n                    /*isLg &&*/ <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography onClick={handleClick} className={classes.active} variant=\"h5\">\n                            {character.name}\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={classes.colorW}>\n                            {character.status} - {character.species}\n                        </Typography>\n                        <Typography variant=\"h6\" className={classes.colorG}>\n                            Last know location:\n                        </Typography>\n                        <Typography onClick={handleClickLocation} variant=\"subtitle1\" className={classes.active}>\n                            {character.location.name}\n                        </Typography>\n                        <Typography variant=\"h6\" className={classes.colorG}>\n                            Created :\n                        </Typography>\n                        <Typography variant=\"subtitle1\" className={classes.colorW}>\n                            {character.created}\n                        </Typography>\n                    </CardContent>\n                </div>\n                }\n\n            </Card>\n        </Box>\n    );\n};\n\nexport default CharacterItem;\n","import React, {ChangeEvent, FunctionComponent, useEffect, useState} from 'react';\nimport {Box, Grid, makeStyles, TextField, Typography} from \"@material-ui/core\";\nimport {Result} from \"../models/CharacterSearched\";\nimport RickAndMortyHttp, {EnumRequestType} from \"../http/RickAndMorty.http\";\nimport CharacterItem from \"../components/CharacterItem\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    textInput: {\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.primary.contrastText,\n    }\n\n}))\n\nconst HomePage: FunctionComponent<Props> = (props) => {\n    const classes = useStyles();\n    const [characters, setCharacters] = useState<Result[]>([]);\n    const [search, setSearch] = useState('');\n\n    const rickAndMortyHttp = RickAndMortyHttp.getInstance();\n\n    const handleCharacteres = async () => {\n        const characters = await rickAndMortyHttp.getCharacteresBySearch(EnumRequestType.character, search);\n        setCharacters(characters.results)\n    }\n\n    const handleChange = (e: ChangeEvent<any>) => {\n        setSearch(e.target.value);\n    }\n\n    useEffect(() => {\n        handleCharacteres()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        handleCharacteres()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [search])\n\n    return (\n        <Grid container>\n            <Grid item xs={12}>\n                <Box p={3}>\n                    <Typography variant=\"h2\">\n                        Characters\n                    </Typography>\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                <TextField fullWidth value={search} onChange={handleChange}\n                           className={classes.textInput}\n                           label=\"Search\"\n                           variant=\"filled\"/>\n            </Grid>\n\n            {\n                characters && characters.map((character, i) => (\n                    <Grid item xs={12} sm={12} md={6} lg={4} xl={4} key={i}>\n                        <CharacterItem character={character}/>\n                    </Grid>\n                ))\n            }\n\n\n        </Grid>\n    );\n};\n\nexport default HomePage;\n","import React, {FunctionComponent} from 'react';\nimport {Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport {Location} from \"../models/Location\";\n\ninterface OwnProps {\n    location: Location\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    subContainerInfo: {\n        width: '100%'\n    },\n    imgPoster: {\n        minHeight: '20vh',\n        objectFit: 'cover'\n    },\n    containerImg: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        minHeight: '90vh',\n\n    },\n    containerInfo: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        padding: theme.spacing(3)\n    },\n}))\n\nconst LocationDetails: FunctionComponent<Props> = ({location}) => {\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={6} className={classes.containerInfo}>\n                <div className={classes.subContainerInfo}>\n                    <Typography variant=\"h2\">{location.name} </Typography>\n                    {/*  <Typography variant=\"h6\">\n                        {character.status} - {character.species}\n                    </Typography>*/}\n                    <Typography variant=\"h4\">{location.dimension} </Typography>\n                    <Typography variant=\"h4\">Type: {location.type} </Typography>\n                    <Typography variant=\"h4\">Created: {location.created} </Typography>\n                    {/*<Typography variant=\"h6\">Residentes: {location.residents} </Typography>*/}\n                </div>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default LocationDetails;\n","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport {makeStyles, Paper} from \"@material-ui/core\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport RickAndMortyHttp, {EnumRequestType} from \"../http/RickAndMorty.http\";\nimport {Location} from \"../models/Location\";\nimport LocationDetails from \"../components/LocationDetails\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minHeight: '90vh',\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n    },\n}))\n\nconst LocationPage: FunctionComponent<Props> = (props) => {\n    const classes = useStyles();\n    const params: any = useParams();\n    const history = useHistory();\n\n    const rickandMortyHttp = RickAndMortyHttp.getInstance();\n\n    const [location, setLocation] = useState<Location>({});\n\n    const handleLocation = async () => {\n        if (!params.id) {\n            history.push('/')\n        }\n        const locationWanted = await rickandMortyHttp.getLocationById(EnumRequestType.location, params.id);\n        setLocation(locationWanted);\n    }\n\n    useEffect(() => {\n        handleLocation();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Paper className={classes.root}>\n            <LocationDetails location={location}/>\n        </Paper>\n    );\n};\n\nexport default LocationPage;\n","import React, {FunctionComponent} from 'react';\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst EpisodesPage: FunctionComponent<Props> = (props) => {\n\n    return (\n        <div>Episodes Page</div>\n    );\n};\n\nexport default EpisodesPage;\n","import React, {FunctionComponent} from 'react';\nimport {Character} from \"../models/Character\";\nimport {Grid, makeStyles, Typography} from \"@material-ui/core\";\n\ninterface OwnProps {\n    character: Character\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    subContainerInfo: {\n        width: '100%'\n    },\n    imgPoster: {\n        minHeight: '20vh',\n        objectFit: 'cover'\n    },\n    containerImg: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        minHeight: '90vh',\n\n    },\n    containerInfo: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        alignContent: 'center',\n        padding: theme.spacing(3)\n    },\n}))\n\nconst CharacterDetails: FunctionComponent<Props> = ({character}) => {\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n            <Grid item xs={12} md={6} className={classes.containerImg}>\n                <img className={classes.imgPoster} src={character.image} alt=\"\"/>\n            </Grid>\n            <Grid item xs={12} md={6} className={classes.containerInfo}>\n                <div className={classes.subContainerInfo}>\n                    <Typography variant=\"h2\">{character.name} </Typography>\n                    <Typography variant=\"h6\">\n                        {character.status} - {character.species}\n                    </Typography>\n                    <Typography variant=\"h6\">{character.location?.name} </Typography>\n                    <Typography variant=\"h6\">Gender: {character.gender} </Typography>\n                </div>\n            </Grid>\n        </Grid>\n       \n    );\n};\n\nexport default CharacterDetails;\n","import React, {FunctionComponent, useEffect, useState} from 'react';\nimport {makeStyles, Paper} from \"@material-ui/core\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport RickAndMortyHttp, {EnumRequestType} from \"../http/RickAndMorty.http\";\nimport {Character} from \"../models/Character\";\nimport CharacterDetails from \"../components/CharacterDetails\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        minHeight: '90vh',\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n    },\n}))\n\nconst CharacterPage: FunctionComponent<Props> = (props) => {\n    const classes = useStyles();\n    const params: any = useParams();\n    const history = useHistory();\n\n    const rickandMortyHttp = RickAndMortyHttp.getInstance();\n\n    const [character, setCharacter] = useState<Character>({});\n\n    const handleCharacter = async () => {\n        if (!params.id) {\n            history.push('/')\n        }\n        const characterWanted = await rickandMortyHttp.getCharacterById(EnumRequestType.character, params.id);\n        setCharacter(characterWanted);\n    }\n\n    useEffect(() => {\n        handleCharacter();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <Paper className={classes.root}>\n            <CharacterDetails character={character}/>\n        </Paper>\n    );\n};\n\nexport default CharacterPage;\n","import {IRoute} from \"../models/IRoute\";\nimport HomePage from \"../Pages/HomePage\";\nimport LocationPage from \"../Pages/LocationPage\";\nimport EpisodesPage from \"../Pages/EpisodesPage\";\nimport CharacterPage from \"../Pages/CharacterPage\";\n\nexport default [\n    {\n        component: HomePage,\n        name: 'home',\n        path: '/',\n        exact: true\n    },\n    {\n        component: CharacterPage,\n        name: 'character-id',\n        path: '/character/:id',\n        exact: true\n    },\n    {\n        component: LocationPage,\n        name: 'location-id',\n        path: '/location/:id',\n        exact: true\n    },\n    {\n        component: EpisodesPage,\n        name: 'episodes',\n        path: '/episodes',\n        exact: true\n    }\n\n] as IRoute[];","import React from 'react';\nimport './App.css';\nimport {Box, Container, Grid, makeStyles, Typography} from \"@material-ui/core\";\nimport {BrowserRouter, NavLink, Switch} from \"react-router-dom\";\nimport SubRoute from \"./routes/SubRoute\";\nimport routes from \"./routes/routes\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.primary.contrastText,\n        margin: 0,\n        padding: 0,\n        minHeight: '100vh',\n        width: '100%',\n    },\n    navbar: {\n        padding: theme.spacing(3),\n    },\n    itemLink: {\n        textDecoration: 'none'\n    },\n    active: {\n        color: theme.palette.secondary.contrastText,\n    }\n}))\n\nfunction App() {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <Container>\n                <BrowserRouter>\n                    <Grid container className={classes.navbar}>\n\n                        <Grid item xs={12} md={6}>\n                            <Typography variant=\"h6\">\n                                The Rick and Morty API\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <Typography component={NavLink} exact={true} className={classes.itemLink}\n                                        activeClassName={classes.active} to=\"/\" noWrap\n                                        color=\"inherit\"\n                                        variant=\"h6\">\n                                Characters\n                            </Typography>\n                        </Grid>\n\n                    </Grid>\n\n\n                    <Switch>\n                        {\n                            routes.map((route, i) => (<SubRoute key={i} {...route}/>))\n                        }\n                    </Switch>\n\n                </BrowserRouter>\n            </Container>\n        </Box>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {FunctionComponent} from 'react';\nimport {createMuiTheme, ThemeProvider} from \"@material-ui/core\";\n\ninterface OwnProps {\n}\n\ntype Props = OwnProps;\n\nconst Theme: FunctionComponent<Props> = ({children}) => {\n\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#242c2c',\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: '#242c2c',\n                contrastText: '#F7A440'\n            }\n        }\n    })\n\n    return (\n        <ThemeProvider theme={theme}>\n            {children}\n        </ThemeProvider>\n    );\n};\n\nexport default Theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Theme from \"./components/Theme\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Theme>\n            <App/>\n        </Theme>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}